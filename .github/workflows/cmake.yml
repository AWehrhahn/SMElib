name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install packages
      run: sudo apt-get install -y f2c
    
    - name: Run F2C
      run: f2c -w -a -C++ -Nn1604 -Nq1200 -dsrc/eos/ src/eos/*.f & f2c -w -a -C++ -dsrc/sme/ src/sme/*.f
    
    - name: Replace Makefile.am
      working-directory: .
      run: rm Makefile.am && mv Makefile_f2c.am Makefile.am
    
    - name: Run Bootstrap and Configure
      shell: bash
      run: ./bootstrap && ./configure --prefix=$PWD
  
    - name: Install
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: make install
   
    - name: Check the current directory
      working-directory: .
      run: ls -a 
      
    - name: Zip data # This would actually build your project, using zip for an example artifact
      run: zip linux-f2c lib share
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./linux-f2c.zip
        asset_name: linux-f2c.zip
        asset_content_type: application/zip
